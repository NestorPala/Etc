/*
 	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/


public class ProjectEuler002 {
	private static long fibonacciEvenSum_(int limit, int lastlast_fib, int last_fib, long sum) {
		int fib = lastlast_fib + last_fib;
		lastlast_fib = last_fib;
		last_fib = fib;

		if (fib > limit) {
			return sum;
		}

		if (fib % 2 == 0) {
			sum += fib;
		}

		return fibonacciEvenSum_(limit, lastlast_fib, last_fib, sum);
	}


	public static long fibonacciEvenSum(int limit) {
		if (limit < 0) {
			return 0;
		}

		return fibonacciEvenSum_(limit, 0, 1, 0);
	}


	public static void main (String[] args) {
		System.out.println(fibonacciEvenSum(4000000)); //4613732
	}
}
